@use 'sass-tests' as *;

@include true-describe('Transform') {
  @include true-it('check Transform output') {
    @include true-assert {
      $arguments: rotate(20deg);
      @include true-output {
        @include Transform($arguments);
      }
      @include true-expect {
        -webkit-transform: $arguments;
        -moz-transform: $arguments;
        -ms-transform: $arguments;
        -o-transform: $arguments;
        transform: $arguments;
      }
    }
  }

  @include true-it('check TransformOrigin output') {
    @include true-assert {
      $x: center;
      $y: center;
      @include true-output {
        @include TransformOrigin($x, $y);
      }
      @include true-expect {
        -webkit-transform-origin: $x $y;
        -moz-transform-origin: $x $y;
        -ms-transform-origin: $x $y;
        -o-transform-origin: $x $y;
        transform-origin: $x $y;
      }
    }
  }

  @include true-it('check Perspective output') {
    @include true-assert {
      $value: 1000;
      @include true-output {
        @include Perspective($value);
      }
      @include true-expect {
        -webkit-perspective: $value;
        -moz-perspective: $value;
        -ms-perspective: $value;
        perspective: $value;
      }
    }
  }

  @include true-it('check Rotation output') {
    @include true-assert {
      $degree: $rotation-degree;
      @include true-output {
        @include Rotation($degree);
      }
      @include true-expect {
        -webkit-transform: rotate($degree);
        -moz-transform: rotate($degree);
        -ms-transform: rotate($degree);
        -o-transform: rotate($degree);
        transform: rotate($degree);
      }
    }
  }

  @include true-it('check Scale output') {
    @include true-assert {
      $ratio: $scale-ratio;
      @include true-output {
        @include Scale($ratio);
      }
      @include true-expect {
        -webkit-transform: scale($ratio);
        -moz-transform: scale($ratio);
        -ms-transform: scale($ratio);
        -o-transform: scale($ratio);
        transform: scale($ratio);
      }
    }
  }

  @include true-it('check Skew output') {
    @include true-assert {
      $rotation-degree: 15deg;
      $rotation-degree2: 45deg;
      @include true-output {
        @include Skew($rotation-degree, $rotation-degree2);
      }
      @include true-expect {
        -webkit-transform: skew($rotation-degree, $rotation-degree2);
        -moz-transform: skew($rotation-degree, $rotation-degree2);
        -ms-transform: skew($rotation-degree, $rotation-degree2);
        -o-transform: skew($rotation-degree, $rotation-degree2);
        transform: skew($rotation-degree, $rotation-degree2);
      }
    }
  }

  @include true-it('check Translate output') {
    @include true-assert {
      $x: 20;
      $y: 10;
      @include true-output {
        @include Translate($x, $y);
      }
      @include true-expect {
        -webkit-transform: translate($x, $y);
        -moz-transform: translate($x, $y);
        -ms-transform: translate($x, $y);
        -o-transform: translate($x, $y);
        transform: translate($x, $y);
      }
    }
  }

  @include true-it('check Translate3D output') {
    @include true-assert {
      $x: 20;
      $y: 10;
      $Z: 30;
      @include true-output {
        @include Translate3D($x, $y, $Z);
      }
      @include true-expect {
        -webkit-transform: translate($x, $y, $Z);
        -moz-transform: translate($x, $y, $Z);
        -ms-transform: translate($x, $y, $Z);
        -o-transform: translate($x, $y, $Z);
        transform: translate($x, $y, $Z);
      }
    }
  }
}
